'use client'

import React from 'react'
import { Button } from '@attraction/design-system'
import * as Entities from '@/entities'

type ViewType = Entities.Article.Types.ViewType
type ViewTypeTabMenuProps = {
  type: ViewType
  setType: (type: ViewType) => void
}

function IconGallery() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      viewBox="0 0 24 24">
      <path
        fill="currentColor"
        fillRule="evenodd"
        d="M6.448 1.75c-.898 0-1.648 0-2.242.08c-.628.084-1.195.27-1.65.725c-.456.456-.642 1.023-.726 1.65c-.08.595-.08 1.345-.08 2.243v.104c0 .898 0 1.648.08 2.242c.084.628.27 1.195.725 1.65c.456.456 1.023.642 1.65.726c.595.08 1.345.08 2.243.08h.104c.898 0 1.648 0 2.242-.08c.628-.084 1.195-.27 1.65-.726c.456-.455.642-1.022.726-1.65c.08-.594.08-1.344.08-2.242v-.104c0-.898 0-1.648-.08-2.242c-.084-.628-.27-1.195-.726-1.65c-.455-.456-1.022-.642-1.65-.726c-.594-.08-1.344-.08-2.242-.08zM3.616 3.616c.13-.13.328-.237.79-.3c.482-.064 1.13-.066 2.094-.066s1.612.002 2.095.067c.461.062.659.169.789.3c.13.13.237.327.3.788c.064.483.066 1.131.066 2.095c0 .964-.002 1.612-.067 2.095c-.062.461-.169.659-.3.789c-.13.13-.327.237-.788.3c-.483.064-1.131.066-2.095.066c-.964 0-1.612-.002-2.095-.067c-.461-.062-.659-.169-.789-.3c-.13-.13-.237-.327-.3-.788c-.064-.483-.066-1.131-.066-2.095c0-.964.002-1.612.067-2.095c.062-.461.169-.659.3-.789m13.831 9.134c-.899 0-1.648 0-2.242.08c-.628.084-1.195.27-1.65.726c-.456.455-.642 1.022-.726 1.65c-.08.594-.08 1.343-.08 2.242v.104c0 .899 0 1.648.08 2.242c.084.628.27 1.195.726 1.65c.455.456 1.022.642 1.65.726c.594.08 1.343.08 2.242.08h.104c.898 0 1.648 0 2.242-.08c.628-.084 1.195-.27 1.65-.726c.456-.455.642-1.022.726-1.65c.08-.594.08-1.343.08-2.242v-.104c0-.898 0-1.648-.08-2.242c-.084-.628-.27-1.195-.726-1.65c-.455-.456-1.022-.642-1.65-.726c-.594-.08-1.343-.08-2.242-.08zm-2.832 1.866c.13-.13.328-.237.79-.3c.482-.064 1.13-.066 2.094-.066s1.612.002 2.095.066c.461.063.659.17.789.3c.13.13.237.328.3.79c.064.482.066 1.13.066 2.094s-.002 1.612-.067 2.095c-.062.461-.169.659-.3.789c-.13.13-.327.237-.788.3c-.483.064-1.131.066-2.095.066c-.964 0-1.612-.002-2.095-.067c-.461-.062-.659-.169-.789-.3c-.13-.13-.237-.327-.3-.788c-.064-.483-.066-1.131-.066-2.095c0-.964.002-1.612.066-2.095c.063-.461.17-.659.3-.789M6.448 12.75h.104c.898 0 1.648 0 2.242.08c.628.084 1.195.27 1.65.726c.456.455.642 1.022.726 1.65c.08.594.08 1.343.08 2.242v.104c0 .899 0 1.648-.08 2.242c-.084.628-.27 1.195-.726 1.65c-.455.456-1.022.642-1.65.726c-.594.08-1.343.08-2.242.08h-.104c-.898 0-1.648 0-2.242-.08c-.628-.084-1.195-.27-1.65-.726c-.456-.455-.642-1.022-.726-1.65c-.08-.594-.08-1.343-.08-2.242v-.104c0-.899 0-1.648.08-2.242c.084-.628.27-1.195.725-1.65c.456-.456 1.023-.642 1.65-.726c.595-.08 1.345-.08 2.243-.08m-2.043 1.566c-.461.063-.659.17-.789.3c-.13.13-.237.328-.3.79c-.064.482-.066 1.13-.066 2.094s.002 1.612.067 2.095c.062.461.169.659.3.789c.13.13.327.237.788.3c.483.064 1.131.066 2.095.066c.964 0 1.612-.002 2.095-.067c.461-.062.659-.169.789-.3c.13-.13.237-.327.3-.788c.064-.483.066-1.131.066-2.095c0-.964-.002-1.612-.067-2.095c-.062-.461-.169-.659-.3-.789c-.13-.13-.327-.237-.788-.3c-.483-.064-1.131-.066-2.095-.066c-.964 0-1.612.002-2.095.066M17.448 1.75c-.899 0-1.648 0-2.242.08c-.628.084-1.195.27-1.65.725c-.456.456-.642 1.023-.726 1.65c-.08.595-.08 1.345-.08 2.243v.104c0 .898 0 1.648.08 2.242c.084.628.27 1.195.726 1.65c.455.456 1.022.642 1.65.726c.594.08 1.343.08 2.242.08h.104c.899 0 1.648 0 2.242-.08c.628-.084 1.195-.27 1.65-.726c.456-.455.642-1.022.726-1.65c.08-.594.08-1.344.08-2.242v-.104c0-.898 0-1.648-.08-2.242c-.084-.628-.27-1.195-.726-1.65c-.455-.456-1.022-.642-1.65-.726c-.594-.08-1.343-.08-2.242-.08zm-2.832 1.866c.13-.13.328-.237.79-.3c.482-.064 1.13-.066 2.094-.066s1.612.002 2.095.067c.461.062.659.169.789.3c.13.13.237.327.3.788c.064.483.066 1.131.066 2.095c0 .964-.002 1.612-.067 2.095c-.062.461-.169.659-.3.789c-.13.13-.327.237-.788.3c-.483.064-1.131.066-2.095.066c-.964 0-1.612-.002-2.095-.067c-.461-.062-.659-.169-.789-.3c-.13-.13-.237-.327-.3-.788c-.064-.483-.066-1.131-.066-2.095c0-.964.002-1.612.066-2.095c.063-.461.17-.659.3-.789"
        clipRule="evenodd"
      />
    </svg>
  )
}

function IconList() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      viewBox="0 0 24 24">
      <path
        fill="currentColor"
        fillRule="evenodd"
        d="M3.25 7A.75.75 0 0 1 4 6.25h16a.75.75 0 0 1 0 1.5H4A.75.75 0 0 1 3.25 7m0 5a.75.75 0 0 1 .75-.75h11a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.75-.75m0 5a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.75-.75"
        clipRule="evenodd"
      />
    </svg>
  )
}

const btn: Array<[ViewType, string, React.FC]> = [
  ['gallery', '갤러리형', IconGallery],
  ['list', '리스트형', IconList],
]

export default function ViewTypeTabMenu({
  type,
  setType,
}: ViewTypeTabMenuProps) {
  return (
    <div className="mb-6 flex border-b border-gray-100 pb-2 dark:border-gray-700">
      {btn.map(([viewType, label, Icon]) => (
        <Button
          key={viewType}
          type="button"
          title={`${label} 보기`}
          className={`xs:text-xl flex grow items-center justify-center gap-2 rounded-lg px-3 py-2 text-lg transition-colors hover:bg-gray-50 md:grow-0 dark:hover:bg-gray-700 ${
            type === viewType
              ? 'text-gray-700 dark:text-gray-50'
              : 'text-gray-500 dark:text-gray-400'
          }`}
          onClick={() => setType(viewType)}>
          <Icon />
          <span className="xs:block hidden whitespace-nowrap text-base">
            {`${label} 보기`}
          </span>
          <span className="xs:hidden block whitespace-nowrap text-sm">
            {label}
          </span>
        </Button>
      ))}
    </div>
  )
}
